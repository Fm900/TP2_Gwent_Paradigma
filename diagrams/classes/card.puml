@startuml Diagrama de Clases

skinparam monochrome true
hide circle
skinparam classAttributeIconSize 0
left to right direction

title TP2 - Cards

abstract class Card {
    - name: String
    - deck: String
}

abstract class Unit {
    - score: Int
    - section: String
    - Mod: Mod
    + compareType(Unit: unit): Boolean
    + playIn(PlayerField: playerField)
}

abstract class Special {
    + applyInBoard(board: Board): void
}

class Melee {
    + playIn(PlayerField: playerField)
}

class Range {
    + playIn(PlayerField: playerField)
}

class Siege {
    + playIn(PlayerField: playerField)
}

abstract class Climate {
    + applyInBoard(board: Board): void
}

class ClearClimate {
    + apllyInBoard(boards:Board): void
}

class Fog {
    + applyClimTo(field: PlayerField): void
}

class Snow {
    + applyClimTo(field: PlayerField): void
}

class TorrentialRain {
    + applyClimTo(field: PlayerField): void
}

class MoraleBoost {
    + applyInBoard(board: Board): void
}

class ScorchedEarth {
    + applyInBoard(board: Board): void
}

interface Mod <<interface>> {
    + apply(unitCards: List<Unit>): List<Unit>
}

class Legend {
    + apply(unitCards: List<Unit>): List<Unit>
}

class Basic {
    + apply(unitCards: List<Unit>): List<Unit>
}

class Medic {
    + apply(unitCards: List<Unit>): List<Unit>
}

class Agile {
    + apply(unitCards: List<Unit>): List<Unit>
}

class Bonded {
    + apply(unitCards: List<Unit>): List<Unit>
}

class Spy {
    + apply(unitCards: List<Unit>): List<Unit>
}

class AddBaseValue {
    + apply(unitCards: List<Unit>): List<Unit>
}

Card <|-- Unit
Card <|-- Special
Mod <|.. Legend
Mod <|.. Medic
Mod <|.. Agile
Mod <|.. Bonded
Mod <|.. Spy
Mod <|.. AddBaseValue
Mod <|.. Basic

Unit --> "0..1" Mod
Unit <|-- Melee
Unit <|-- Range
Unit <|-- Siege

Special <|-- Climate
Climate <|-- Fog
Climate <|-- TorrentialRain
Climate <|-- Snow

Special <|-- ClearClimate
Special <|-- MoraleBoost
Special <|-- ScorchedEarth

@enduml